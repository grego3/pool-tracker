<?php
/**
 * @file
 * A block module that tracks pool games.
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function pool_tracker_help($path, $arg) {
  switch ($path) {
    case 'admin/help#pool_tracker':
      $output = '';
      $output .= '<h3>' . t('Pool Tracker Help') . '</h3>';
      $output .= '<p>' . t('Track your pool games.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>'; 
      $output .= '<dl>';
      $output .= '<dt>' . t('Play a game.') . '</dt>';
      $output .= '<dd>' . t('First create an account. Then select a player. Play your game. Track the winner. See the leaderboard!').'</dd>';
      $output .= '<dt>' . t('xxx') . '</dt>';
      $output .= '<dd>' . t('yyy.') . '</dd>'; 
      $output .= '</dl>'; 
      return $output; 
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function pool_tracker_block_info() {
  $blocks['pool_tracker'] = array(
    'info' => t('Pool tracker'),
    'status' => TRUE,
    'region' => 'content',
    'cache' => DRUPAL_NO_CACHE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'pool-tracker',
    'class' => 'your-custom-class',
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function pool_tracker_block_view($delta = '') {
  switch ($delta) {
    case 'pool_tracker':
      $block['subject'] = t('');
      if (user_access('access content')) {
        $block['content'] = _pool_tracker_block_content();  
      }
    return $block;
  }
}

function _pool_tracker_block_content(){
  global $user;
  $output = '';
  
  // Show User Log-in
  if(!user_is_logged_in()){ 
    $output .= '<h2>Sign-in</h2>';
    $elements = drupal_get_form("user_login"); 
    $form = drupal_render($elements); 
    $output .= $form;
    $output .= '<a href="/user/register"><h3>Create New Player</h3></a>';  
  } else {
    $output .= "<h2>You're logged in</h2>";
  }
  
  return $output;
}


function pool_tracker_node_insert($node) {
  if($node->type == 'game'){
    $winner = $node->game_winner['und'][0]['uid'];
    $existing = user_load($winner);
    $edit = (array) $existing; 
    if(!isset($edit['game_wins']['und'][0]['value'])) {
      $edit['game_wins']['und'][0]['value'] = 1;
    } else {
      $edit['game_wins']['und'][0]['value'] += 1;
    }
    user_save($existing, $edit);
    
  }
}


/**
 * Implements hook_views_api().
 */
function pool_tracker_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'pool_tracker'),
  );
}

// Views export creates code that you have to paste in this function.
/**
 * Implementation of hook_views_default_views().
 */
function pool_tracker_views_default_views() {

  $view = new view();
  $view->name = 'games';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'Games';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
  
  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Games';
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '6';
  $handler->display->display_options['style_plugin'] = 'default';
  $handler->display->display_options['row_plugin'] = 'fields';
  /* Field: Content: Nid */
  $handler->display->display_options['fields']['nid']['id'] = 'nid';
  $handler->display->display_options['fields']['nid']['table'] = 'node';
  $handler->display->display_options['fields']['nid']['field'] = 'nid';
  $handler->display->display_options['fields']['nid']['label'] = 'Num';
  /* Field: Content: Player One */
  $handler->display->display_options['fields']['game_player_1']['id'] = 'game_player_1';
  $handler->display->display_options['fields']['game_player_1']['table'] = 'field_data_game_player_1';
  $handler->display->display_options['fields']['game_player_1']['field'] = 'game_player_1';
  /* Field: Content: Player Two */
  $handler->display->display_options['fields']['game_player_2']['id'] = 'game_player_2';
  $handler->display->display_options['fields']['game_player_2']['table'] = 'field_data_game_player_2';
  $handler->display->display_options['fields']['game_player_2']['field'] = 'game_player_2';
  /* Field: Content: Game Winner */
  $handler->display->display_options['fields']['game_winner']['id'] = 'game_winner';
  $handler->display->display_options['fields']['game_winner']['table'] = 'field_data_game_winner';
  $handler->display->display_options['fields']['game_winner']['field'] = 'game_winner';
  /* Sort criterion: Content: Post date */
  $handler->display->display_options['sorts']['created']['id'] = 'created';
  $handler->display->display_options['sorts']['created']['table'] = 'node';
  $handler->display->display_options['sorts']['created']['field'] = 'created';
  $handler->display->display_options['sorts']['created']['order'] = 'DESC';
  /* Filter criterion: Content: Published */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = 1;
  $handler->display->display_options['filters']['status']['group'] = 1;
  $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'game' => 'game',
  );
  
  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['path'] = 'games';
  $handler->display->display_options['menu']['type'] = 'normal';
  $handler->display->display_options['menu']['title'] = 'Games';
  $handler->display->display_options['menu']['name'] = 'main-menu';
  
  $views[$view->name] = $view;
  return $views;
}
